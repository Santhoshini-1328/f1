{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { SharedService } from '../shared.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../../../../libs/ui/src/lib/card/card.component\";\nfunction SeasonComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"f1-card\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"year\", item_r1.raceName)(\"isChampion\", ctx_r0.winner == item_r1.Results[0].Driver.givenName)(\"name\", item_r1.Results[0].Driver.givenName + \" \" + item_r1.Results[0].Driver.familyName);\n  }\n}\nexport class SeasonComponent {\n  constructor(service, activatedRoute) {\n    this.service = service;\n    this.activatedRoute = activatedRoute;\n    this.winner = '';\n    this.season = '';\n  }\n  ngOnInit() {\n    //Extrating year and winner details from url params\n    this.season = this.activatedRoute.snapshot.paramMap.get('year');\n    this.winner = this.activatedRoute.snapshot.paramMap.get('winner');\n    //Fetching the list of races from a season\n    this.service.getRaces(this.season).subscribe(data => {\n      this.seasons = JSON.parse(data).MRData.RaceTable.Races;\n    });\n  }\n}\nSeasonComponent.ɵfac = function SeasonComponent_Factory(t) {\n  return new (t || SeasonComponent)(i0.ɵɵdirectiveInject(i1.SharedService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nSeasonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SeasonComponent,\n  selectors: [[\"f1-season\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"header\"], [\"class\", \"container\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [3, \"year\", \"isChampion\", \"name\"]],\n  template: function SeasonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"F1 World Champions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, SeasonComponent_div_3_Template, 2, 3, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.seasons);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.CardComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  padding: 2px 16px;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  height: auto;\\n  width: auto;\\n  margin: auto;\\n  background-color: aliceblue;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  background-color: lightslategrey;\\n  height: 80px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvZjEvc3JjL2FwcC9zZWFzb24vc2Vhc29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsMkJBQUE7QUFDSjs7QUFDQTtFQUNJLGdDQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBRUoiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIHBhZGRpbmc6IDJweCAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XG59XG4uaGVhZGVye1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0c2xhdGVncmV5O1xuICAgIGhlaWdodDogODBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ActivatedRoute","SharedService","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r1","raceName","ctx_r0","winner","Results","Driver","givenName","familyName","SeasonComponent","constructor","service","activatedRoute","season","ngOnInit","snapshot","paramMap","get","getRaces","subscribe","data","seasons","JSON","parse","MRData","RaceTable","Races","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","SeasonComponent_Template","rf","ctx","ɵɵtext","ɵɵtemplate","SeasonComponent_div_3_Template"],"sources":["C:\\Users\\Sunny\\Downloads\\f1\\f1\\apps\\f1\\src\\app\\season\\season.component.ts","C:\\Users\\Sunny\\Downloads\\f1\\f1\\apps\\f1\\src\\app\\season\\season.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'f1-season',\n  templateUrl: './season.component.html',\n  styleUrls: ['./season.component.scss'],\n})\nexport class SeasonComponent {\n  seasons: any;\n  winner: string | null = '';\n  season: string | null  = '';\n  constructor(private service: SharedService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    //Extrating year and winner details from url params\n    this.season = this.activatedRoute.snapshot.paramMap.get('year');\n    this.winner = this.activatedRoute.snapshot.paramMap.get('winner');\n\n    //Fetching the list of races from a season\n    this.service.getRaces(this.season).subscribe((data: any) => {\n      this.seasons = JSON.parse(data).MRData.RaceTable.Races;\n    })\n  }\n}\n","<div class=\"header\"><h1>F1 World Champions</h1></div>\n\n<div class=\"container\" *ngFor=\"let item of seasons\">\n    <f1-card [year]=\"item.raceName\" \n    [isChampion]=\"winner == item.Results[0].Driver.givenName\" \n    [name]=\"item.Results[0].Driver.givenName + ' ' +item.Results[0].Driver.familyName\"></f1-card>\n</div>\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,SAASC,aAAa,QAAQ,mBAAmB;;;;;;;;ICAjDC,EAAA,CAAAC,cAAA,aAAoD;IAChDD,EAAA,CAAAE,SAAA,iBAE6F;IACjGF,EAAA,CAAAG,YAAA,EAAM;;;;;IAHOH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,UAAA,SAAAC,OAAA,CAAAC,QAAA,CAAsB,eAAAC,MAAA,CAAAC,MAAA,IAAAH,OAAA,CAAAI,OAAA,IAAAC,MAAA,CAAAC,SAAA,UAAAN,OAAA,CAAAI,OAAA,IAAAC,MAAA,CAAAC,SAAA,SAAAN,OAAA,CAAAI,OAAA,IAAAC,MAAA,CAAAE,UAAA;;;ADMnC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,OAAsB,EAAUC,cAA8B;IAA9D,KAAAD,OAAO,GAAPA,OAAO;IAAyB,KAAAC,cAAc,GAAdA,cAAc;IAFlE,KAAAR,MAAM,GAAkB,EAAE;IAC1B,KAAAS,MAAM,GAAmB,EAAE;EAC2D;EAEtFC,QAAQA,CAAA;IACN;IACA,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,cAAc,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,MAAM,CAAC;IAC/D,IAAI,CAACb,MAAM,GAAG,IAAI,CAACQ,cAAc,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEjE;IACA,IAAI,CAACN,OAAO,CAACO,QAAQ,CAAC,IAAI,CAACL,MAAM,CAAC,CAACM,SAAS,CAAEC,IAAS,IAAI;MACzD,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAACI,MAAM,CAACC,SAAS,CAACC,KAAK;IACxD,CAAC,CAAC;EACJ;;AAfWjB,eAAe,C;mBAAfA,eAAe,EAAAd,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAlC,aAAA,GAAAC,EAAA,CAAAgC,iBAAA,CAAAE,EAAA,CAAApC,cAAA;AAAA;AAAfgB,eAAe,C;QAAfA,eAAe;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT5BzC,EAAA,CAAAC,cAAA,aAAoB;MAAID,EAAA,CAAA2C,MAAA,yBAAkB;MAAA3C,EAAA,CAAAG,YAAA,EAAK;MAE/CH,EAAA,CAAA4C,UAAA,IAAAC,8BAAA,iBAIM;;;MAJkC7C,EAAA,CAAAI,SAAA,GAAU;MAAVJ,EAAA,CAAAK,UAAA,YAAAqC,GAAA,CAAAhB,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}